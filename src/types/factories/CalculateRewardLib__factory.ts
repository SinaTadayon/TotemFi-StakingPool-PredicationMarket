/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { CalculateRewardLib } from "../CalculateRewardLib";

export class CalculateRewardLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CalculateRewardLib> {
    return super.deploy(overrides || {}) as Promise<CalculateRewardLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CalculateRewardLib {
    return super.attach(address) as CalculateRewardLib;
  }
  connect(signer: Signer): CalculateRewardLib__factory {
    return super.connect(signer) as CalculateRewardLib__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalculateRewardLib {
    return new Contract(address, _abi, signerOrProvider) as CalculateRewardLib;
  }
}

const _abi = [
  {
    inputs: [],
    name: "foo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101e861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063066f1dee14610045578063c29855781461006e575b600080fd5b610058610053366004610148565b610076565b6040516100659190610160565b60405180910390f35b610058610130565b80546000906100875750600061012b565b6000805b8354811015610127578381815481106100b457634e487b7160e01b600052603260045260246000fd5b906000526020600020906008020160070160019054906101000a900460ff16610115576101128482815481106100fa57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600890910201548390610135565b91505b8061011f81610181565b91505061008b565b5090505b919050565b600081565b60006101418284610169565b9392505050565b600060208284031215610159578081fd5b5035919050565b90815260200190565b6000821982111561017c5761017c61019c565b500190565b60006000198214156101955761019561019c565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204081921ca13b080605340c62e8fd521e800e2abae061bc233eb8e097b13392d664736f6c63430008000033";
