/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { USDRetriever } from "../USDRetriever";

export class USDRetriever__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDRetriever> {
    return super.deploy(overrides || {}) as Promise<USDRetriever>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): USDRetriever {
    return super.attach(address) as USDRetriever;
  }
  connect(signer: Signer): USDRetriever__factory {
    return super.connect(signer) as USDRetriever__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDRetriever {
    return new Contract(address, _abi, signerOrProvider) as USDRetriever;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ApproveTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceivedTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferTokens",
    type: "event",
  },
  {
    inputs: [],
    name: "getUSDBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUSDToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061016e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c12010541461003b578063f5e96fc914610059575b600080fd5b61004361006e565b604051610050919061012f565b60405180910390f35b6100616100f4565b604051610050919061011b565b600080546040516370a0823160e01b81526001600160a01b03909116906370a082319061009f90309060040161011b565b60206040518083038186803b1580156100b757600080fd5b505afa1580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef9190610103565b905090565b6000546001600160a01b031690565b600060208284031215610114578081fd5b5051919050565b6001600160a01b0391909116815260200190565b9081526020019056fea2646970667358221220313049e9907e7ff5b0ed2cfc89e3f9088d29de5ec21f9101ad52c9348aca208864736f6c63430008000033";
