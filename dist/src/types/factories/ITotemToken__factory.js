"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ITotemToken__factory = void 0;
var ethers_1 = require("ethers");
var ITotemToken__factory = /** @class */ (function () {
    function ITotemToken__factory() {
    }
    ITotemToken__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return ITotemToken__factory;
}());
exports.ITotemToken__factory = ITotemToken__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "distributeTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_CommunityDevelopmentAddr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_StakingRewardsAddr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_LiquidityPoolAddr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_PublicSaleAddr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_AdvisorsAddr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_SeedInvestmentAddr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_PrivateSaleAddr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_TeamAllocationAddr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_StrategicRoundAddr",
                type: "address",
            },
        ],
        name: "setDistributionTeamsAddresses",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_locker",
                type: "address",
            },
        ],
        name: "setLocker",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "bool",
                name: "status",
                type: "bool",
            },
        ],
        name: "setTaxExemptStatus",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "newTaxRate",
                type: "uint256",
            },
        ],
        name: "setTaxRate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newTaxationWallet",
                type: "address",
            },
        ],
        name: "setTaxationWallet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_msgSender",
                type: "address",
            },
        ],
        name: "taxExempt",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "taxRate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "taxationWallet",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
//# sourceMappingURL=ITotemToken__factory.js.map